@inherits umbraco.MacroEngines.DynamicNodeContext

@* Create div and assign ID - Assign height and width for embed to show *@
@{ var media = Parameter.mapData; }
<div id="map-canvas" style="width:100%; height:650px;"></div>
<script src="//maps.googleapis.com/maps/api/js?sensor=false"></script>
<script>
	var gmarkers = [];
	var gicons = [];
	var openedInfoWindow = null; 
	/* Should match the onclick function in CampusMap-Selectors */
	/* Media items are found in: Media > Design > Interactive Campus Map > Map Markers */
	gicons["academic"] = "/media/1288460/academic.png";
	gicons["dining"] = "/media/1288465/dining.png";
	gicons["recreation"] = "/media/1288480/recreation.png";
	gicons["housing"] = "/media/1288450/housing.png";
	gicons["support"] = "/media/1288475/support.png";
	
	gicons["parking"] = "/media/1288490/parking.png";
	gicons["religion"] = "/media/1288470/chapel.png";
	gicons["police"] = "/media/1288485/police.png";
	gicons["health"] = "/media/1288455/health.png";
	
	//FUNCTION Create the marker and set up the event window
	var side_bar_html = "";
	var gmarkers = [];

	function createMarker(point,name,category,html) {
		var marker = new google.maps.Marker({position:point, map:map, icon:gicons[category]});

		//store the category and name info as a marker properties
		marker.mycategory = category;                                 
		marker.myname = name;
		google.maps.event.addListener(marker, "click", function() {
			
			//create the new info window
			var infowindow = new google.maps.InfoWindow({ content: html, maxWidth: 450 });
			
			//Close a currently opened info window
			if (openedInfoWindow != null) openedInfoWindow.close(); 

			//save this info window so we can close it later
			openedInfoWindow = infowindow;
			
			//open it
			infowindow.open(map, marker);
		});
		gmarkers.push(marker);
		
		return marker;
	}

	//FUNCTION Show all markers of a particular category, and ensures the checkbox is checked
	function show(category) {
		for (var i=0; i<gmarkers.length; i++) {
			if (gmarkers[i].mycategory == category) {
				gmarkers[i].setMap(map);
			}
		}
		//Check the checkbox
		document.getElementById(category+"box").checked = true;
		
		makeSidebar();
	}
	
	//FUNCTION Hide all markers of a particular category, and ensures the checkbox is cleared
	function hide(category) {
		for (var i=0; i<gmarkers.length; i++) {
			if (gmarkers[i].mycategory == category) {
				gmarkers[i].setMap(null);
			}
		}
		
		//Clear the checkbox
		document.getElementById(category+"box").checked = false;
		
		//Close the info window, in case its open on a marker that we just hid
		if (openedInfoWindow != null) openedInfoWindow.close(); 
		
		makeSidebar();
	}

	//FUNCTION A checkbox has been clicked
	function boxclick(box,category) {
		if (box.checked) {
			show(category);
		} else {
			hide(category);
		}
		//Rebuild the side bar
		makeSidebar();
	}
	
	//FUNCTION Show a specific marker
	function showLocation(name) {
		for (var i=0; i<gmarkers.length; i++) {
			if ($.trim(gmarkers[i].myname) == name) {
				gmarkers[i].show();
				myclick(i);
			}
		}
	}

	//FUNCTION Rebuild the sidebar to match the markers currently displayed
	function makeSidebar() {
		var html = "";
		html += '<ul class="square">';
		for (var i=0; i<gmarkers.length; i++) {
			if (gmarkers[i].getMap() != null ) {
				html += '<li><a href="javascript:myclick(' + i + ')">' + gmarkers[i].myname + '<\/a></li>';
			}
		}
		html += '</ul>';
		document.getElementById("side_bar").innerHTML = html;
	}
		
	//FUNCTION Pick up the click and open the info window
	function myclick(i) {
		google.maps.event.trigger(gmarkers[i], "click");
	}
	
	function init(){
		// Initiates the map with Academic buildings selected
		/*hide("academic");*/
		hide("dining");
		hide("recreation");
		hide("housing");
		hide("support");
		
		hide("parking");
		hide("religion");
		hide("police");
		hide("health");
		
	}
	
	//FUNCTION Parse data
	process_it = function(doc) {
		//split the document into sections
		lines = doc.split("<hr />");
		for (var i=0; i<lines.length; i++) {
			if (lines[i].length > 1) {
				//split each line into parts separated by "|" and use the contents
				parts = lines[i].split("|");
				var name = parts[0];
				var lat = parseFloat(parts[1]);
				var lng = parseFloat(parts[2]);
				var category = parts[3];
				var html = parts[4];
				var point = new google.maps.LatLng(lat,lng);
				// create the marker
				var marker = createMarker(point,name,category,html);
				init(); /* Run initialize */
			}
		}
		
	}

	//Map options - See Google Maps API: http://bit.ly/1asx32C
	var mapOptions = {
		zoom: 16,
		center: new google.maps.LatLng(39.483558, -87.324593),
		panControl: false,
		zoomControl: true,
		scaleControl: true,
		mapTypeControl: true,
		mapTypeId: google.maps.MapTypeId.ROADMAP,
			styles: [ { featureType: "poi", elementType: "labels", stylers:[ { visibility: "simplified" } ]
					  }
					]
	}
	
	var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
	
	var side_bar_html = "";
	/* Campus Data is found in: Media > Design > Interactive Campus Map > Campus Data
	   Download the file, edit the file then replace it in the media library. 
	   Selected via mediaPicker
	*/
	$.get("@Model.MediaById(media).Url", process_it);
	
	makeSidebar();

</script>